install.packages("car")
install.packages("lattice")
install.packages("Hmisc")
install.packages("caret")
?createDataParticition
library(car)
library(lattice)
library(Hmisc)
library(caret)
library(RWeka)
library(rpart)
library(partykit)
library(arules)
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("caret")
install.packages("RWeka")
install.packages("rpart")
install.packages("partykit")
install.packages("arules")
library(car)
library(lattice)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
library(caret)
library(RWeka)
library(rpart)
library(partykit)
library(arules)
train <- read.csv("Lab8.Train.csv")
test <- read.csv("Lab8.Test.csv")
train.nominal <- train[,2:13]
train.nominal$a1 <- as.factor(train.nominal$a1)
train.nominal2 <- train[,2:14]
train.nominal2$a1 <- NULL
train.nominal2$a2 <- as.factor(train.nominal2$a2)
whole <- rbind(train,test)
whole2 <- rbind(train,test)
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
?set.seed
set.seed(1)
split <- createDataPartition(whole$a1, p=6)[[1]]
set.seed(1)
split <- createDataPartition(whole$a1, p=0.6)[[1]]
split2 <- createDataPartition(whole2$a2, p=0.6)[[1]]
train.nominal <- train[,2:13]
train.nominal$a1 <- as.factor(train.nominal$a1)
train.nominal2 <- train[,2:14]
train.nominal2$a1 <- NULL
train.nominal2$a2 <- as.factor(train.nominal2$a2)
whole <- rbind(train,test)
whole2 <- rbind(train,test)
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
set.seed(1)
split <- createDataPartition(whole$a1, p=0.6)[[1]]
split2 <- createDataPartition(whole2$a2, p=0.6)[[1]]
split <- createDataPartition(whole$a1, p=0.6)[[1]]
split.train <- whole[split,]
split.test <- whole[-split,]
View(split.train)
split2 <- createDataPartition(whole2$a2, p=0.6)[[1]]
split.train2 <- whole2[split2,]
split.test2 <- whole2[-split2,]
View(split.test2)
rm(split)
rm(split2)
writeLines("RIPPER Model created for a1:")
train.model.rules <- JRip(a1 ~ ., data=split.train)
train.model.rules2 <- JRip(a2 ~ ., data=split.train2)
print(train.model.rules)
writeLines("RIPPER Model created for a2:")
print(train.model.rules2)
train.model.rules <- JRip(a1 ~ ., data=split.train)
train.model.rules2 <- JRip(a2 ~ ., data=split.train2)
writeLines("RIPPER Model created for a1:")
print(train.model.rules)
writeLines("RIPPER Model created for a2:")
print(train.model.rules2)
train.nominal <- train[,2:13]
train.nominal$a1 <- as.factor(train.nominal$a1)
test.nominal <- test[,2:13]
test.nominal$a1 <- as.factor(test.nominal$a1)
train.nominal2 <- train[,2:14]
train.nominal2$a1 <- NULL
train.nominal2$a2 <- as.factor(train.nominal2$a2)
test.nominal2 <- test[,2:14]
test.nominal2$a1 <- NULL
test.nominal2$a2 <- as.factor(test.nominal2$a2)
View(test.nominal2)
whole <- rbind(train,test)
whole2 <- rbind(train,test)
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
set.seed(1)
split <- createDataPartition(whole$a1, p=0.6)[[1]]
split.train <- whole[split,]
split.test <- whole[-split,]
split2 <- createDataPartition(whole2$a2, p=0.6)[[1]]
split.train2 <- whole2[split2,]
split.test2 <- whole2[-split2,]
rm(split)
rm(split2)
train.model.nom <- J48(a1 ~ ., data=train.nominal)
train.model.nom2 <- J48(a2 ~ ., data=train.nominal2)
test.predict.nom <- predict(train.model.nom, test)
test.predict.nom2 <- predict(train.model.nom2, test)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.predict.nom2 <- predict(train.model.nom2, test.nominal)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.predict.nom2 <- predict(train.model.nom2, test.nominal)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal$a1)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.predict.nom2 <- predict(train.model.nom2, test.nominal)
print(test.predict.nom)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.predict.nom2 <- predict(train.model.nom2, test.nominal2)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal$a1)
train.model.nom <- J48(a1 ~ ., data=train.nominal)
train.model.nom2 <- J48(a2 ~ ., data=train.nominal2)
train.model.rules <- JRip(a1 ~ ., data=split.train)
train.model.rules2 <- JRip(a2 ~ ., data=split.train2)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.predict.nom2 <- predict(train.model.nom2, test.nominal2)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal$a1)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal$a1)
test.eval.nom <- confusionMatrix(test.predict.nom, test$a1)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal)
?`predict
?predict
?predict
?predict
test.predict.nom <- predict(train.model.nom)
test.predict.nom <- predict(train.model.nom)
test.predict.nom <- predict(train.model.nom, test.nominal$a1)
View(test.nominal)
View(train.nominal)
test.predict.nom <- predict(train.model.nom, test.nominal$a1)
test.predict.nom <- predict(train.model.nom, test.nominal)
str(test.nominal$a1)
test.predict.rules <- predict(train.model.rules, split.train)
test.predict.rules2 <- predict(train.model.rules2, split.train2)
whole <- rbind(train,test)
whole <- whole[,2:13]
whole2 <- rbind(train,test)
whole2 <- whole[,2:14]
whole <- rbind(train,test)
whole <- whole[,2:13]
whole2 <- rbind(train,test)
whole2 <- whole[,2:14]
whole2 <- whole2[,2:14]
whole2$a1 <- NULL
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
whole <- rbind(train,test)
whole <- whole[,2:13]
whole2 <- rbind(train,test)
whole2 <- whole2[,2:14]
whole2$a1 <- NULL
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 5)
whole <- rbind(train,test)
whole2 <- rbind(train,test)
whole$a1 <- discretize(whole$a1, categories = 10)
whole2$a2 <- discretize(whole$a2, categories = 10)
View(whole)
whole <- whole[,2:13]
whole2 <- whole2[2:14]
whole2$a1 <- NULL
View(whole2)
set.seed(1)
split <- createDataPartition(whole$a1, p=0.6)[[1]]
split.train <- whole[split,]
split.test <- whole[-split,]
split2 <- createDataPartition(whole2$a2, p=0.6)[[1]]
split.train2 <- whole2[split2,]
split.test2 <- whole2[-split2,]
rm(split)
rm(split2)
train.model.rules <- JRip(a1 ~ ., data=split.train)
train.model.rules <- JRip(a1 ~ ., data=split.train)
train.model.rules2 <- JRip(a2 ~ ., data=split.train2)
writeLines("RIPPER Model created for a1:")
print(train.model.rules)
writeLines("RIPPER Model created for a2:")
print(train.model.rules2)
test.predict.rules <- predict(train.model.rules, split.train)
test.predict.rules2 <- predict(train.model.rules2, split.train2)
test.eval.rules2 <- confusionMatrix(test.predict.rules2, split.test2$a2)
test.eval.rules <- confusionMatrix(test.predict.rules, split.test$a1)
test.predict.rules <- predict(train.model.rules, split.test)
test.predict.rules2 <- predict(train.model.rules2, split.test2)
test.eval.rules <- confusionMatrix(test.predict.rules, split.test$a1)
test.eval.rules <- confusionMatrix(test.predict.rules, split.test$a1)
install.packages("e1071")
library(e1071)
test.eval.rules <- confusionMatrix(test.predict.rules, split.test$a1)
test.eval.rules2 <- confusionMatrix(test.predict.rules2, split.test2$a2)
print(test.eval.rules)
test.predict.nom <- predict(train.model.nom, test.nominal)
test.eval.nom <- confusionMatrix(test.predict.nom, test.nominal$a1)
str(test.nominal)
str(test.predict.nom)
str(test.nominal$a1)
